// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: chat/message.proto

package chat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReplyTo          string   `protobuf:"bytes,2,opt,name=replyTo,proto3" json:"replyTo,omitempty"`
	ThreadId         string   `protobuf:"bytes,3,opt,name=threadId,proto3" json:"threadId,omitempty"`
	IsInThread       bool     `protobuf:"varint,4,opt,name=isInThread,proto3" json:"isInThread,omitempty"`
	ShowThreadInChat bool     `protobuf:"varint,5,opt,name=showThreadInChat,proto3" json:"showThreadInChat,omitempty"`
	Type             string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Content          string   `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	FileUrl          string   `protobuf:"bytes,8,opt,name=fileUrl,proto3" json:"fileUrl,omitempty"`
	MentionedUsers   []string `protobuf:"bytes,9,rep,name=mentionedUsers,proto3" json:"mentionedUsers,omitempty"`
	ChatId           string   `protobuf:"bytes,10,opt,name=chatId,proto3" json:"chatId,omitempty"`
}

func (x *NewMessage) Reset() {
	*x = NewMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMessage) ProtoMessage() {}

func (x *NewMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMessage.ProtoReflect.Descriptor instead.
func (*NewMessage) Descriptor() ([]byte, []int) {
	return file_chat_message_proto_rawDescGZIP(), []int{0}
}

func (x *NewMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NewMessage) GetReplyTo() string {
	if x != nil {
		return x.ReplyTo
	}
	return ""
}

func (x *NewMessage) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *NewMessage) GetIsInThread() bool {
	if x != nil {
		return x.IsInThread
	}
	return false
}

func (x *NewMessage) GetShowThreadInChat() bool {
	if x != nil {
		return x.ShowThreadInChat
	}
	return false
}

func (x *NewMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NewMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NewMessage) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *NewMessage) GetMentionedUsers() []string {
	if x != nil {
		return x.MentionedUsers
	}
	return nil
}

func (x *NewMessage) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

type MessageDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReplyTo          string   `protobuf:"bytes,2,opt,name=replyTo,proto3" json:"replyTo,omitempty"`
	ThreadId         string   `protobuf:"bytes,3,opt,name=threadId,proto3" json:"threadId,omitempty"`
	IsInThread       bool     `protobuf:"varint,4,opt,name=isInThread,proto3" json:"isInThread,omitempty"`
	ShowThreadInChat bool     `protobuf:"varint,5,opt,name=showThreadInChat,proto3" json:"showThreadInChat,omitempty"`
	Type             string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Content          string   `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	FileUrl          string   `protobuf:"bytes,8,opt,name=fileUrl,proto3" json:"fileUrl,omitempty"`
	MentionedUsers   []string `protobuf:"bytes,9,rep,name=mentionedUsers,proto3" json:"mentionedUsers,omitempty"`
	ChatId           string   `protobuf:"bytes,10,opt,name=chatId,proto3" json:"chatId,omitempty"`
	CreatedAt        string   `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	HasBeenEdited    bool     `protobuf:"varint,12,opt,name=hasBeenEdited,proto3" json:"hasBeenEdited,omitempty"`
	ResponseEmojis   []string `protobuf:"bytes,13,rep,name=responseEmojis,proto3" json:"responseEmojis,omitempty"`
}

func (x *MessageDetail) Reset() {
	*x = MessageDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDetail) ProtoMessage() {}

func (x *MessageDetail) ProtoReflect() protoreflect.Message {
	mi := &file_chat_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDetail.ProtoReflect.Descriptor instead.
func (*MessageDetail) Descriptor() ([]byte, []int) {
	return file_chat_message_proto_rawDescGZIP(), []int{1}
}

func (x *MessageDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageDetail) GetReplyTo() string {
	if x != nil {
		return x.ReplyTo
	}
	return ""
}

func (x *MessageDetail) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *MessageDetail) GetIsInThread() bool {
	if x != nil {
		return x.IsInThread
	}
	return false
}

func (x *MessageDetail) GetShowThreadInChat() bool {
	if x != nil {
		return x.ShowThreadInChat
	}
	return false
}

func (x *MessageDetail) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MessageDetail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MessageDetail) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *MessageDetail) GetMentionedUsers() []string {
	if x != nil {
		return x.MentionedUsers
	}
	return nil
}

func (x *MessageDetail) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *MessageDetail) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MessageDetail) GetHasBeenEdited() bool {
	if x != nil {
		return x.HasBeenEdited
	}
	return false
}

func (x *MessageDetail) GetResponseEmojis() []string {
	if x != nil {
		return x.ResponseEmojis
	}
	return nil
}

var File_chat_message_proto protoreflect.FileDescriptor

var file_chat_message_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x22, 0xa6, 0x02, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x43, 0x68, 0x61,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0x95, 0x03, 0x0a, 0x0d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x43, 0x68, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x68, 0x6f,
	0x77, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x42, 0x65, 0x65, 0x6e, 0x45, 0x64,
	0x69, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x42,
	0x65, 0x65, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x73, 0x42, 0x0f, 0x5a, 0x0d, 0x70, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x68,
	0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_message_proto_rawDescOnce sync.Once
	file_chat_message_proto_rawDescData = file_chat_message_proto_rawDesc
)

func file_chat_message_proto_rawDescGZIP() []byte {
	file_chat_message_proto_rawDescOnce.Do(func() {
		file_chat_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_message_proto_rawDescData)
	})
	return file_chat_message_proto_rawDescData
}

var file_chat_message_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chat_message_proto_goTypes = []interface{}{
	(*NewMessage)(nil),    // 0: pchat.chat.NewMessage
	(*MessageDetail)(nil), // 1: pchat.chat.MessageDetail
}
var file_chat_message_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chat_message_proto_init() }
func file_chat_message_proto_init() {
	if File_chat_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_message_proto_goTypes,
		DependencyIndexes: file_chat_message_proto_depIdxs,
		MessageInfos:      file_chat_message_proto_msgTypes,
	}.Build()
	File_chat_message_proto = out.File
	file_chat_message_proto_rawDesc = nil
	file_chat_message_proto_goTypes = nil
	file_chat_message_proto_depIdxs = nil
}
